{
  "env": {
    "MAX_THINKING_TOKENS": "31999",
    "CLAUDE_CODE_PARALLEL_TOOL_CALLS": "true",
    "CLAUDE_CODE_BATCH_OPERATIONS": "true",
    "CLAUDE_CODE_CACHE_DURATION": "900",
    "CLAUDE_CODE_MAX_CONCURRENT_TASKS": "5",
    "CLAUDE_CODE_AUTO_CONNECT_IDE": "false",
    "CLAUDE_CODE_IDE_SKIP_AUTO_INSTALL": "true",
    "CLAUDE_CODE_IDE_SKIP_VALID_CHECK": "true",
    "CLAUDE_CODE_IDE_DEFAULT": "code",
    "CLAUDE_CODE_ENABLE_TELEMETRY": "false",
    "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": "true",
    "DISABLE_TELEMETRY": "true",
    "DISABLE_ERROR_REPORTING": "true",
    "DISABLE_AUTOUPDATER": "true",
    "CLAUDE_CODE_AUTO_FORMAT": "true",
    "CLAUDE_CODE_AUTO_LINT": "true",
    "CLAUDE_CODE_SHOW_PROGRESS": "true",
    "CLAUDE_CODE_VERBOSE_ERRORS": "true",
    "CLAUDE_CODE_COLOR_OUTPUT": "true",
    "CLAUDE_CODE_SANITIZE_OUTPUTS": "true",
    "CLAUDE_CODE_MASK_SECRETS": "true",
    "CLAUDE_CODE_SECURE_MODE": "false",
    "CLAUDE_CODE_DEFAULT_BRANCH": "main",
    "CLAUDE_CODE_GIT_AUTO_STAGE": "false",
    "CLAUDE_CODE_TEST_BEFORE_COMMIT": "true",
    "CODEX_REVIEW_TIMEOUT": "180",
    "CODEX_REVIEW_VERBOSE": "true",
    "CODEX_REVIEW_PLAN": "false"
  },
  "permissions": {
    "allow": [
      "Bash(npm:*)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(python:*)",
      "Bash(pip:*)",
      "Bash(go:*)",
      "Bash(cargo:*)",
      "Bash(docker:*)",
      "Bash(mise:*)",
      "Bash(git:*)",
      "Bash(gh:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(rm [!-]:*)",
      "Bash(pwd)",
      "Bash(date:*)",
      "Bash(whoami)",
      "Bash(which:*)",
      "Bash(env)",
      "Bash(echo:*)",
      "Bash(command -v:*)",
      "Bash(npm test)",
      "Bash(npm run:*)",
      "Bash(yarn test)",
      "Bash(yarn run:*)",
      "Bash(pytest:*)",
      "Bash(go test:*)",
      "Bash(cargo test:*)",
      "Bash(make:*)",
      "Bash(aws s3 ls:*)",
      "Bash(aws ec2 describe-:*)",
      "Bash(aws iam list-:*)",
      "Bash(aws-bastion:*)",
      "Bash(code:*)",
      "Bash(vim:*)",
      "Bash(nano:*)",
      "Bash(jq:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(ghq:*)",
      "Bash(peco-src)",
      "Bash(fzf:*)",
      "Bash(th:*)",
      "Bash(gnews:*)",
      "Bash(source:*)",
      "Bash(reload)",
      "Bash(zsh:*)",
      "Bash(exec zsh)",
      "Bash(export PATH=:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:zenn.dev)",
      "WebFetch(domain:qiita.com)",
      "WebFetch(domain:note.com)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/:*)",
      "Bash(rm -rf /:*)",
      "Bash(rm -rf */:*)",
      "Bash(rm -rf .)",
      "Bash(rm -rf ..)",
      "Bash(rm -rf:*)",
      "Bash(rm -rf .:*)",
      "Bash(rm -rf ~/src)",
      "Bash(rm -rf ~/Documents)",
      "Bash(rm -rf ~/Desktop)",
      "Bash(rm -rf ~/Downloads)",
      "Bash(sudo rm:*)",
      "Bash(sudo mv /etc/:*)",
      "Bash(sudo chmod 777 /)",
      "Bash(sudo chown:*)",
      "Bash(sudo kill:*)",
      "Bash(sudo killall:*)",
      "Bash(sudo pkill:*)",
      "Bash(git push --force origin main)",
      "Bash(git push --force origin master)",
      "Bash(git reset --hard HEAD~:*)",
      "Bash(git clean -fdx)",
      "Bash(sudo ifconfig:*)",
      "Bash(sudo iptables -F)",
      "Bash(brew uninstall --force:*)",
      "Bash(sudo apt-get purge:*)",
      "Bash(sudo yum remove:*)",
      "Read(~/.aws/credentials)",
      "Read(~/.ssh/id_rsa)",
      "Read(~/.ssh/id_ed25519)",
      "Read(~/.env)",
      "Read(~/.env.local)",
      "Read(~/.zsh_history)",
      "Read(~/.bash_history)",
      "Write(~/.zshrc)",
      "Write(~/.bashrc)",
      "Write(~/.gitconfig)",
      "Write(~/.ssh/config)"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "echo '‚ö†Ô∏è Êñ∞Ë¶è‰ΩúÊàêÂâç„Å´Á¢∫Ë™ç: Êó¢Â≠ò„Éï„Ç°„Ç§„É´„ÅÆÁ∑®ÈõÜ„Åß„ÅØ„ÉÄ„É°„Åß„Åô„ÅãÔºü'"
          }
        ]
      },
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üö® „Çø„Çπ„ÇØÂÆüË°åÂâç„Å´Á¢∫Ë™ç: ‰ΩúÊ•≠ÂÜÖÂÆπ„ÅØÊòéÁ¢∫„Åß„Åô„ÅãÔºü'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/codex-review-hook.sh"
          },
          {
            "type": "command",
            "command": "osascript -e 'display notification \"„Çø„Çπ„ÇØ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü\" with title \"Claude Code\" subtitle \"Âá¶ÁêÜÁµÇ‰∫Ü\" sound name \"Hero\"'"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "osascript -e 'display notification \"Claude Code„ÅåË®±ÂèØ„ÇíÊ±Ç„ÇÅ„Å¶„ÅÑ„Åæ„Åô\" with title \"Claude Code\" subtitle \"Á¢∫Ë™çÂæÖ„Å°\" sound name \"Glass\"'"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "~/.claude/codex-statusline.sh"
  },
  "alwaysThinkingEnabled": false
}